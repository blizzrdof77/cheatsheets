NAME:
  strmod

VERSION:
  0.43.2 (2023-07-14)

DESCRIPTION:
  strmod tests or performs an operation on a string using pipe syntax

AVAILABLE PARAMETERS:
  $1 - operation  [the type of operation or test to run against the string]

SUBCOMMANDS:
  trim            Trim the extra whitespace of the string
  join            Join all new lines (replacing with spaces)
  collapse        Delete multiple consecutive line breaks
  expand          Breaks spaces into new lines
  to_upper        Transform the case of the string to uppercase
  uppercase       (alias for to_upper)
  to_lower        Transform the case of the string to lowercase
  lowercase       (alias for to_lower)
  to_title        Transform the case of the string to title case
  titlecase       (alias for to_title)
  to_camel        Transform the case of the string to camel case
  camelcase       (alias for to_camel)
  capitalize      Transform the case of the string by capitalizing the first letter of each word
  slugify         Replace spaces with provided character (default is '_')
  trim_suffix     Trim string suffix of target string (default is whitespace)
  trim_prefix     Trim string prefix of target string (default is whitespace)
  strip           Trim string prefix [$1] and suffix [$2] (prefix/suffix are equal if [$2] not provided)
  split           Split subject string at provided substring, optionally return index [$2] OR string using [$2] as glue
  slice           Split subject string into pieces at provided substring [$1], optionally returning first or last piece
  replace         Find & replace subject string [$1] with other target string [$2]
  find_replace    (alias for replace)
  regex_replace   RegEx find/replace using provided needle [$1] and replacement string [$2]
  regreplace      (alias for regex_replace)
  remove          Removes all provided substrings from subject string
  without         (alias for remove)
  words           Count number of words in subject string
  length          Returns length of subject string
  count           Returns number of times substring [$1] occurs in subject string
  chars           Count total number of characters in subject string
  line            Returns line number [$1] of subject string
  lines           Returns number of lines in subject string OR number of lines containing provided substring [$1]
  sort            Sorts or merges lines of subject string [-r,--reverse]
  random          Randomizes the order of lines in subject string
  shuffle         (alias for random)
  reverse         Reverses the order of the lines in subject string
  endswith        Test whether the string ends with the provided substring (true/false)
  startswith      Test whether the string starts with the provided substring (true/false)
  empty           Test whether the string is empty (true/false)
  contains        Test whether the string contains the provided substring (true/false)
  contains_any    Test whether the string contains any of the provided substrings (true/false)
  equals          Test whether the string is the same as the provided substring (true/false)
  equals_any      Test whether the string is the same as any of the provided substrings (true/false)
  greaterthan     Test whether the numeric string is greater than the provided numeric value (true/false)
  lessthan        Test whether the numeric string is less than the provided numeric value (true/false)
  prepend         Prepends the provided substring
  append          Appends the provided substring
  wrap            Wraps the string with the provided prefix (arg 1) and suffix (arg 2)
  calculate       Evaluate basic arithmetic operation (e.g. "+7") against the value and display the result
  round           Round the subject number to the closest integer
  get_type        Return the data type of the value (number, string, boolean, array, object, null)
  is_type         Check if a value is of given type (number, string, boolean, array, object, null)

OPTIONS:
  -h, --help      [display this help text and exit]
  -v, --version   [display version information and exit]

SYNOPSIS:
  strmod operation [$1] [$2]

EXAMPLES:
  echo "a string" | strmod to_upper                               # A STRING
  echo "another string" | strmod contains "string"                # true
  echo "yet another string" | strmod length                       # 18
  echo "yet another string" | strmod startswith "another"         # false
  echo "yet another string" | strmod count " "                    # 2
  echo "yet\n another \nstring" | strmod lines                    # 3
  echo "small string" | strmod replace 'small' 'tiny'             # tiny string
  echo "string 1" | strmod regex_replace '(.*?)[ ].*' '\1_2'      # string_2
  echo "::string::" | strmod strip ':' '::'                       # :string
  echo "::string::" | strmod strip '::' | strmod count ':'        # :string
  echo "5" | strmod get_type                                      # number
  echo "10" | strmod calculate '-9'                               # 1
  echo '{}' | strmod is_type object                               # true
  echo 5 | strmod is_type string | strmod get_type                # boolean
  echo "abc" | strmod equals_any a b c                            # false
  echo "abc" | strmod contains_any a b c                          # true
  echo "uno,dos,tres" | strmod split "," 1                        # dos
  echo "http://website.com" | strmod slice "://" last             # website.com
  echo "jo McCan" | strmod capitalize							                # Joe McCan
  echo "5" | strmod greaterthan 3								                  # true
  echo "5" | strmod lessthan 3                                    # false
  echo "20.54" | strmod round                                     # 21
